Books Table
CREATE TABLE Books (
    BookID INT PRIMARY KEY AUTO_INCREMENT,
    Title VARCHAR(255) NOT NULL,
    Author VARCHAR(255) NOT NULL,
    ISBN VARCHAR(13) NOT NULL UNIQUE,
    PublishedYear INT,
    CopiesAvailable INT DEFAULT 0
);
Members Table
CREATE TABLE Members (
    MemberID INT PRIMARY KEY AUTO_INCREMENT,
    Name VARCHAR(255) NOT NULL,
    Email VARCHAR(255) NOT NULL UNIQUE,
    Phone VARCHAR(15),
    MembershipDate DATE DEFAULT CURRENT_DATE
);
Transactions Table
CREATE TABLE Transactions (
    TransactionID INT PRIMARY KEY AUTO_INCREMENT,
    MemberID INT,
    BookID INT,
    BorrowDate DATE DEFAULT CURRENT_DATE,
    ReturnDate DATE,
    FOREIGN KEY (MemberID) REFERENCES Members(MemberID),
    FOREIGN KEY (BookID) REFERENCES Books(BookID)
);
INSERT INTO Books (Title, Author, ISBN, PublishedYear, CopiesAvailable)
VALUES ('The Great Gatsby', 'F. Scott Fitzgerald', '9780743273565', 1925, 3),
       ('To Kill a Mockingbird', 'Harper Lee', '9780060935467', 1960, 5);
INSERT INTO Members (Name, Email, Phone)
VALUES ('John Doe', 'johndoe@example.com', '123-456-7890'),
       ('Jane Smith', 'janesmith@example.com', '098-765-4321');
INSERT INTO Transactions (MemberID, BookID, BorrowDate)
VALUES (1, 1, '2024-11-01'),  -- Member John Doe borrows "The Great Gatsby"
       (2, 2, '2024-11-02');  -- Member Jane Smith borrows "To Kill a Mockingbird"
2. Update Data
UPDATE Books
SET CopiesAvailable = CopiesAvailable - 1
WHERE BookID = 1;  -- Decrement copies for "The Great Gatsby"
Update Member Information

UPDATE Members
SET Phone = '111-222-3333'
WHERE MemberID = 1;  -- Update phone number for John Doe
Update Transaction with Return Date


UPDATE Transactions
SET ReturnDate = '2024-11-15'
WHERE TransactionID = 1;  -- Mark the first transaction as returned

3. Delete Data
Delete a Book
DELETE FROM Books
WHERE BookID = 2;  -- Delete "To Kill a Mockingbird"

Delete a Member
DELETE FROM Members
WHERE MemberID = 2;  -- Delete Jane Smith

Delete a Transaction
DELETE FROM Transactions
WHERE TransactionID = 1;  -- Delete the first transaction

4. Retrieve Data
Retrieve All Books
SELECT * FROM Books;

Retrieve All Members
SELECT * FROM Members;

Retrieve All Transactions
SELECT * FROM Transactions;

Retrieve Books Borrowed by a Members
SELECT b.Title, t.BorrowDate, t.ReturnDate
FROM Transactions t
JOIN Books b ON t.BookID = b.BookID
WHERE t.MemberID = 1;  -- Books borrowed by MemberID 1 (John Doe)

Retrieve Members with Outstanding Transactions (Books Not Yet Returned)
SELECT m.Name, b.Title, t.BorrowDate
FROM Transactions t
JOIN Members m ON t.MemberID = m.MemberID
JOIN Books b ON t.BookID = b.BookID
WHERE t.ReturnDate IS NULL;
